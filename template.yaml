apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: testttt
  title: t
  description: t
spec:
  owner: user:guest
  type: service

  parameters:
    - title: Fill in some steps
      required:
        # Jira Info
        - name
        - description
        - summary
        - issuetype
        - project

        # User Info
        - firstName
        - lastName
        - uNumber
        - email
        - costCenter
        - department
        - departmentLong
        - title
        - isCompanyChanger

      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        description:
          title: description
          type: string
          description: Unique description of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        summary:
          title: summary
          type: string
          description: Unique summary of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        project:
          title: project
          type: string
          description: Unique project of the component
          ui:autofocus: true
          enum:
            - BACKSTAGE
        issuetype:
          title: issuetype
          type: string
          description: Unique issuetype of the component
          enum:
            - '10001'
        # user info
        firstName:
          title: firstName
          type: string
          description: First name
          ui:autofocus: true
          ui:options:
            rows: 5
        lastName:
          title: Last name
          type: string
          description: Last name
          ui:autofocus: true
          ui:options:
            rows: 5
        uNumber:
          title: U-Number
          type: string
          description: U-Number
          ui:autofocus: true
          ui:options:
            rows: 5
        email:
          title: Email Address
          type: string
          description: Email Address
          ui:autofocus: true
          ui:options:
            rows: 5
        costCenter:
          title: Cost center
          type: string
          description: Cost center
          ui:autofocus: true
          ui:options:
            rows: 5
        department:
          title: Department
          type: string
          description: Department
          ui:autofocus: true
          ui:options:
            rows: 5
        departmentLong:
          title: Department (long)
          type: string
          description: Department (long)
          ui:autofocus: true
          ui:options:
            rows: 5
        title:
          title: Title
          type: string
          description: Title
          ui:autofocus: true
          ui:options:
            rows: 5
        isCompanyChanger:
          title: Is a company changer
          description: Is a company changer
          type: boolean

  steps:
    - id: fetchBase
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
    - id: jira
      name: jira pub
      action: jira:issue:create
      input:
        project: ${{ parameters.project }}
        summary: ${{ parameters.summary }}
        issuetype: ${{ parameters.issuetype }}
        description: ${{ parameters.description }}
    # - id: publish
    #   name: Publish
    #   action: publish:github:pull-request
    #   input:
    #     description: This is ${{ parameters.name }}
    #     title: This is ${{ parameters.name }}
    #     repoUrl: github.com?repo=backstage-config&owner=lmilt95
    #     repoVisibility: public
    #     branchName: mtest
    #     targetPath: test
    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: https://github.com/lmilt95/backstage-config/tree/mtest/test
    #     catalogInfoPath: '/${{ parameters.name }}-catalog-info.yaml'

  # Outputs are displayed to the user after a successful execution of the template.
  # output:
  #   links:
  #     - title: Repository
  #       url: ${{ steps['publish'].output.remoteUrl }}
  #     - title: Open in catalog
  #       icon: catalog
  #       entityRef: ${{ steps['register'].output.entityRef }}
